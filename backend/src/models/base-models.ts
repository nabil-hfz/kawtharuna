// Imports from mongoose package.
import { Schema, Document } from 'mongoose';

/**
 * Interface for the base model. It extends Mongoose's Document to leverage
 * typing features. This interface can be extended by other model interfaces
 * to inherit common fields like `createdAt` and `updatedAt`.
 */
export interface IBaseModel extends Document {
  // Date when the document is created. Optional as it will be set by default.
  createdAt: Date | undefined;

  // Date when the document is last updated. Optional, can be undefined.
  updatedAt?: Date;
}

/**
 * The base Mongoose schema that can be used by other schemas for common fields.
 * This schema includes `createdAt` and `updatedAt` fields with default values.
 */
export const BaseModelSchema = new Schema<IBaseModel>({
  // Field for the creation date, with a default value of the current date/time.
  createdAt: { type: Date, default: Date.now },

  // Field for the last update date. By default, it is undefined and can be set when a document is updated.
  updatedAt: { type: Date, default: undefined }
}, {
  // Schema options to include virtuals when converting documents to JSON or Objects.
  toJSON: { virtuals: true },
  toObject: { virtuals: true }
});

/**
 * A virtual 'id' field is defined to provide a more conventional field name (`id`) 
 * for the document's `_id` field, which is automatically generated by MongoDB.
 * This virtual field does not persist in the database, it's only present in the Mongoose layer.
 */
BaseModelSchema.virtual('id').get(function () {
  return this._id.toHexString();
});
