name: kawtharuna
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.2.1 <4.0.0'

dependencies:
  flutter:
    sdk: flutter

  flutter_localizations:
    sdk: flutter
  #  intl: ^0.18.0
  intl:

  audioplayers: ^3.0.0
  cupertino_icons: ^1.0.2
  go_router: ^12.1.3
  animations: ^2.0.10

  logging: ^1.1.0
  provider: ^6.0.2
  shared_preferences: ^2.0.13

  # If you don't need one of the following dependencies,
  # delete the relevant line below, and get rid of any Dart code
  # that references the dependency.
  firebase_core: ^2.1.1  # Needed for Crashlytics below
  firebase_crashlytics: ^3.4.8
  games_services: ^3.0.0  # Achievements and leaderboards
  google_mobile_ads: ^2.0.1  # Ads
  in_app_purchase: ^3.0.1  # In-app purchases
  cloud_firestore: ^4.4.4
  get_it: ^7.2.0
  injectable: ^2.1.0
  device_info_plus: ^8.1.0
  google_fonts: ^4.0.3
  flex_color_scheme: ^7.3.1
  internet_connection_checker: ^1.0.0+1

  dio: ^5.3.0
  # Pretty Dio logger is a Dio interceptor that logs network calls in a pretty, easy to read format.
  pretty_dio_logger: ^1.3.1

  equatable: ^2.0.5
  flutter_bloc: ^8.1.2
  fluttertoast: ^8.2.1
  another_flushbar: ^1.12.29
  devicelocale: ^0.6.0
  http_parser: ^4.0.2
  json_annotation: ^4.8.0
  flutter_svg: ^2.0.3
  rxdart: ^0.27.7
  flutter_spinkit: ^5.2.0
  shimmer: ^3.0.0


  # A lightweight flutter package to simplify the creation of a miniplayer by providing a builder
  # function with the current height and percentage progress. The widget responds to tap and drag
  # gestures and is highly customizable. What is a miniplayer? Miniplayers are commonly used in
  # media applications like Spotify and Youtube. A miniplayer can be expanded and minified and
  # remains on the screen when minified until dismissed by the user. See the demo below for
  # an example.
  miniplayer: ^1.0.1
  cached_network_image: ^3.3.0
  firebase_storage: ^11.0.16


#  flutter pub upgrade --major-versions

dev_dependencies:
  flutter_test:
    sdk: flutter
  integration_test:
    sdk: flutter
  analysis_defaults:
    path: ./analysis_defaults
  test: ^1.19.0

  flutter_launcher_icons: ^0.12.0


  # Change App Package Name with single command. It makes the process very easy and fast.
  #  flutter pub run change_app_package_name:main com.kawtharuna.mobile
  change_app_package_name: ^1.1.0


  # It helps you to change your flutter project's AppName and BundleId for different platforms,
  # currently only available for IOS, Android, macOS, Windows and Web
  # flutter pub global activate rename
  # flutter pub global deactivate rename
  # flutter pub global run rename --appname "Kawtharuna"
  # rename setAppName --value "Kawtharuna"

  rename: ^3.0.1

  # When your app is opened, there is a brief time while the native app loads Flutter. By default,
  # during this time, the native app displays a white splash screen. This package automatically
  # generates iOS, Android, and Web-native code for customizing this native splash screen background
  # color and splash image. Supports dark mode, full screen, and platform-specific options.
  flutter_native_splash: ^2.2.19


  # The Flutter code generator for your assets, fonts, colors,
  # … — Get rid of all String-based APIs.
  injectable_generator: ^2.1.4
  analyzer: ^5.2.0
  #  json_serializable: ^3.2.2
  json_serializable: ^6.6.1
  build_runner: ^2.3.3

  flutter_gen_runner: ^5.2.0

flutter:
  uses-material-design: true

  assets:
    - assets/
    - assets/fonts/
    - assets/icons/
    - assets/images/
    - assets/music/
    - assets/Permanent_Marker/
    - assets/sfx/
    - assets/reciters/

  fonts:
    - family: Permanent Marker
      fonts:
        - asset: assets/Permanent_Marker/PermanentMarker-Regular.ttf

flutter_gen:
  output: lib/src/core/generated_files/assets/

  line_length: 80
  null_safety: true
  style: snake-case
  integrations:
    flutter_svg: true
  assets:
    enabled: true
  fonts:
    enabled: false

#  # Optional
#  integrations:
#    flutter_svg: true
#    flare_flutter: true
#    rive: true
#    lottie: true

#  colors:
#    inputs:
#      - assets/color/colors.xml


flutter_icons:
  android: true
  ios: true
  image_path: "assets/app_logo.png"
  #  adaptive_icon_background: "#FFFFFF"
  #  adaptive_icon_foreground: "assets/icon-adaptive-foreground.png"
  min_sdk_android: 21 # android min sdk min:16, default 21
  web:
    generate: true
    #    image_path: "path/to/image.png"
    background_color: "#FFFFFF"
    theme_color: "#FFFFFF"
  windows:
    generate: true
    #    image_path: "path/to/image.png"
    icon_size: 48 # min:48, max:256, default: 48
  macos:
    generate: true
#    image_path: "path/to/image.png"

flutter_native_splash:
  color: "#ffffff"
  image: assets/app_logo.png
  #  branding: assets/icon.png
  color_dark: "#121212"
  image_dark: assets/app_logo.png
  #  branding_dark: assets/icon.png

  android_12:
    image: assets/app_logo.png
    icon_background_color: "#ffffff"
    image_dark: assets/app_logo.png
    icon_background_color_dark: "#121212"

  web: false

#flutter_native_splash:
#  # This package generates native code to customize Flutter's default white native splash screen
#  # with background color and splash image.
#  # Customize the parameters below, and run the following command in the terminal:
#  # flutter pub run flutter_native_splash:create
#  # To restore Flutter's default white splash screen, run the following command in the terminal:
#  # flutter pub run flutter_native_splash:remove
#
#  # color or background_image is the only required parameter.  Use color to set the background
#  # of your splash screen to a solid color.  Use background_image to set the background of your
#  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
#  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
#  color: "#42a5f5"
#  #background_image: "assets/background.png"
#
#  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
#  # the leading # character.
#
#  # The image parameter allows you to specify an image used in the splash screen.  It must be a
#  # png file and should be sized for 4x pixel density.
#  #image: assets/splash.png
#
#  # The branding property allows you to specify an image used as branding in the splash screen.
#  # It must be a png file. It is supported for Android, iOS and the Web.  For Android 12,
#  # see the Android 12 section below.
#  #branding: assets/dart.png
#
#  # To position the branding image at the bottom of the screen you can use bottom, bottomRight,
#  # and bottomLeft. The default values is bottom if not specified or specified something else.
#  #branding_mode: bottom
#
#  # The color_dark, background_image_dark, image_dark, branding_dark are parameters that set the background
#  # and image when the device is in dark mode. If they are not specified, the app will use the
#  # parameters from above. If the image_dark parameter is specified, color_dark or
#  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
#  # set.
#  #color_dark: "#042a49"
#  #background_image_dark: "assets/dark-background.png"
#  #image_dark: assets/splash-invert.png
#  #branding_dark: assets/dart_dark.png
#
#  # Android 12 handles the splash screen differently than previous versions.  Please visit
#  # https://developer.android.com/guide/topics/ui/splash-screen
#  # Following are Android 12 specific parameter.
#  android_12:
#  # The image parameter sets the splash screen icon image.  If this parameter is not specified,
#  # the app's launcher icon will be used instead.
#  # Please note that the splash screen will be clipped to a circle on the center of the screen.
#  # App icon with an icon background: This should be 960×960 pixels, and fit within a circle
#  # 640 pixels in diameter.
#  # App icon without an icon background: This should be 1152×1152 pixels, and fit within a circle
#  # 768 pixels in diameter.
#  #image: assets/android12splash.png
#
#  # Splash screen background color.
#  #color: "#42a5f5"
#
#  # App icon background color.
#  #icon_background_color: "#111111"
#
#  # The branding property allows you to specify an image used as branding in the splash screen.
#  #branding: assets/dart.png
#
#  # The image_dark, color_dark, icon_background_color_dark, and branding_dark set values that
#  # apply when the device is in dark mode. If they are not specified, the app will use the
#  # parameters from above.
#  #image_dark: assets/android12splash-invert.png
#  #color_dark: "#042a49"
#  #icon_background_color_dark: "#eeeeee"
#
#  # The android, ios and web parameters can be used to disable generating a splash screen on a given
#  # platform.
#  #android: false
#  #ios: false
#  #web: false
#
#  # Platform specific images can be specified with the following parameters, which will override
#  # the respective parameter.  You may specify all, selected, or none of these parameters:
#  #color_android: "#42a5f5"
#  #color_dark_android: "#042a49"
#  #color_ios: "#42a5f5"
#  #color_dark_ios: "#042a49"
#  #color_web: "#42a5f5"
#  #color_dark_web: "#042a49"
#  #image_android: assets/splash-android.png
#  #image_dark_android: assets/splash-invert-android.png
#  #image_ios: assets/splash-ios.png
#  #image_dark_ios: assets/splash-invert-ios.png
#  #image_web: assets/splash-web.png
#  #image_dark_web: assets/splash-invert-web.png
#  #background_image_android: "assets/background-android.png"
#  #background_image_dark_android: "assets/dark-background-android.png"
#  #background_image_ios: "assets/background-ios.png"
#  #background_image_dark_ios: "assets/dark-background-ios.png"
#  #background_image_web: "assets/background-web.png"
#  #background_image_dark_web: "assets/dark-background-web.png"
#  #branding_android: assets/brand-android.png
#  #branding_dark_android: assets/dart_dark-android.png
#  #branding_ios: assets/brand-ios.png
#  #branding_dark_ios: assets/dart_dark-ios.png
#
#  # The position of the splash image can be set with android_gravity, ios_content_mode, and
#  # web_image_mode parameters.  All default to center.
#  #
#  # android_gravity can be one of the following Android Gravity (see
#  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
#  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
#  # fill_vertical, left, right, start, or top.
#  #android_gravity: center
#  #
#  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
#  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
#  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
#  # bottomLeft, or bottomRight.
#  #ios_content_mode: center
#  #
#  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
#  #web_image_mode: center
#
#  # The screen orientation can be set in Android with the android_screen_orientation parameter.
#  # Valid parameters can be found here:
#  # https://developer.android.com/guide/topics/manifest/activity-element#screen
#  #android_screen_orientation: sensorLandscape
#
#  # To hide the notification bar, use the fullscreen parameter.  Has no effect in web since web
#  # has no notification bar.  Defaults to false.
#  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
#  #       To show the notification bar, add the following code to your Flutter app:
#  #       WidgetsFlutterBinding.ensureInitialized();
#  #       SystemChrome.setEnabledSystemUIOverlays([SystemUiOverlay.bottom, SystemUiOverlay.top]);
#  #fullscreen: true
#
#  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
#  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
#  # do not remove any spaces:
#  #info_plist_files:
#  #  - 'ios/Runner/Info-Debug.plist'
#  #  - 'ios/Runner/Info-Release.plist'

# flutter_scripts run
# dart pub global deactivate flutter_scripts
# dart pub global activate flutter_scripts
scripts:
  # dev environment:
  run-dev: flutter clean && flutter pub get && flutter run --dart-define ENV=dev --flavor=dev
  build-dev: flutter clean && flutter pub get && flutter build apk --dart-define ENV=dev --flavor=dev

  # prod environment:
  run-prod: flutter clean && flutter pub get && flutter run --dart-define ENV=prod --flavor=prod
  build-prod: flutter clean && flutter pub get && flutter build apk --dart-define ENV=prod --flavor=prod

  # development scripts:
  generate_files: flutter packages get && flutter pub run build_runner build --delete-conflicting-outputs
  clean_generate_files: flutter clean && flutter packages get && flutter pub run build_runner build --delete-conflicting-outputs
  generate_watch_files:  flutter packages get && flutter pub run build_runner watch --delete-conflicting-outputs

  generate_app_logo: flutter clean && flutter packages get && flutter pub run flutter_launcher_icons
  generate_splash: flutter clean && flutter packages get && flutter pub run flutter_native_splash:create

  cache_repair: flutter clean && flutter pub cache repair && flutter pub run build_runner clean
  install_activate_flutter_gen: brew install FlutterGen/tap/fluttergen && dart pub global activate flutter_gen && flutter pub get && flutter packages pub run build_runner build

flutter_intl:
  enabled: true
  main_local: en
  class_name: Translations
  arb_dir: lib/src/core/managers/localization/res
  output_dir: lib/src/core/managers/localization/generated
